<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://ctw2100.github.io</id>
    <title>ASAP</title>
    <updated>2020-10-27T05:49:15.065Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://ctw2100.github.io"/>
    <link rel="self" href="https://ctw2100.github.io/atom.xml"/>
    <subtitle>ASAP</subtitle>
    <logo>https://ctw2100.github.io/images/avatar.png</logo>
    <icon>https://ctw2100.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, ASAP</rights>
    <entry>
        <title type="html"><![CDATA[Draw Round Shape in SwiftUI]]></title>
        <id>https://ctw2100.github.io/mk-4ZBDqR/</id>
        <link href="https://ctw2100.github.io/mk-4ZBDqR/">
        </link>
        <updated>2020-10-26T13:52:38.000Z</updated>
        <content type="html"><![CDATA[<h2 id="use-geometryreader-uibezierpath">use GeometryReader + UIBezierPath</h2>
<pre><code>struct Rounded: Shape {
    func path(in rect: CGRect) -&gt; Path {
        let path = UIBezierPath(roundedRect: rect, byRoundingCorners: [.topLeft, .topRight], cornerRadii: CGSize(width: 40, height: 40))
        return Path(path.cgPath)
    }
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Class VS Struct]]></title>
        <id>https://ctw2100.github.io/z7pJDxN0T/</id>
        <link href="https://ctw2100.github.io/z7pJDxN0T/">
        </link>
        <updated>2020-08-01T05:26:56.000Z</updated>
        <content type="html"><![CDATA[<h2 id="class-and-struct-is-very-similar-in-ios-development-so-whats-different-between-them">Class and Struct is very similar in IOS development, So what's different between them?</h2>
<h3 id="first-class-is-reference-types-struct-is-value-types">first, Class is reference types, Struct is value types.</h3>
<h2 id="so-whatis-reference-types-and-value-types">So what'is reference types and value types?</h2>
<h3 id="reference-types-is-just-like-google-sheet-it-has-one-source-of-truth-everyone-can-both-edit-and-change">reference types is just like Google Sheet, it has one source of truth, everyone can both edit and change</h3>
<img src="file:///Users/cclee/Documents/Gridea/post-images/1603776537737.png" alt="Google Sheet" style="zoom:25%;" />
<h3 id="value-types-is-just-like-microsoft-excel-when-you-wanna-change-it-it-doesnt-change-me-file-just-like-i-sent-you-a-copy-file">value types is just like Microsoft Excel, when you wanna change it, it doesn't change me file, just like I sent you a copy file.</h3>
<img src="file:///Users/cclee/Documents/Gridea/post-images/1603776688556.png" alt="Microsoft Excel" style="zoom:25%;" />
<p>Here is some example explain different between Class and Struct:</p>
<pre><code>class Developr {
    var name: String?
    var jobTitle: String?
    var yearsExp: Int?

    init(name: String, jobTitle: String, yearsExp: Int) {
        self.name = name
        self.jobTitle = jobTitle
        self.yearsExp = yearsExp
    }
}

var sean = Developer(name: &quot;Sean&quot;, jobTitle: &quot;IOS Enngineer&quot;, yearsExp: 5)
var joe = sean
joe.name = &quot;Joe&quot;
sean.name // because Class is reference types, so sean.name is &quot;Joe&quot;
</code></pre>
<pre><code>struct Developr {
    var name: String
    var jobTitle: String
    var yearsExp: Int

    // struct don't have init in it.
}

var sean = Developer(name: &quot;Sean&quot;, jobTitle: &quot;IOS Enngineer&quot;, yearsExp: 5)
var joe = sean // joe got copy of sean
joe.name = &quot;Joe&quot;
sean.name // because Class is value types, so sean.name is &quot;Sean&quot;
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://ctw2100.github.io/hello-gridea/</id>
        <link href="https://ctw2100.github.io/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>